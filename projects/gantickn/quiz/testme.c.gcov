        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
     1274:    6:char inputChar()
        -:    7:{
        -:    8:	//rand() % (max_num + 1 - min_num) + min_num
     1274:    9:    int i = rand() % (126 - 32 +1) + 32;	//generates a random number between 32 - 126 (printable ascii range)
     1274:   10:	char c = (char)i;			//cast above num to a random char with that value
        -:   11:	
     1274:   12:    return c;
        -:   13:}
        -:   14:
     1274:   15:char *inputString()
        -:   16:{
     1274:   17:	int i = 6;
     1274:   18:	int m = 0;
     1274:   19:	char *str[i];
     1274:   20:	str[i-1] = '\0';
     1274:   21:	int k = rand() % 50;
        -:   22:	
     7644:   23:	for( int j = 0; j < i-1; j++) {
     6370:   24:		m = rand() % (126 - 32 +1) + 32;
     6370:   25:		str[j] = (char)m;
        -:   26:	}
        -:   27:	
        -:   28:	
     1274:   29:	if (k == 0) {
       20:   30:		strcpy(str, "reset");
        -:   31:	}
        -:   32:	
     1274:   33:    return str;
        -:   34:}
        -:   35:
        1:   36:void testme()
        -:   37:{
        1:   38:  int tcCount = 0;
        -:   39:  char *s;
        -:   40:  char c;
        1:   41:  int state = 0;
        -:   42:  while (1)
        -:   43:  {
     1274:   44:    tcCount++;
     1274:   45:    c = inputChar();
     1274:   46:    s = inputString();
     1274:   47:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
        -:   48:
     1274:   49:    if (c == '[' && state == 0) state = 1;
     1274:   50:    if (c == '(' && state == 1) state = 2;
     1274:   51:    if (c == '{' && state == 2) state = 3;
     1274:   52:    if (c == ' '&& state == 3) state = 4;
     1274:   53:    if (c == 'a' && state == 4) state = 5;
     1274:   54:    if (c == 'x' && state == 5) state = 6;
     1274:   55:    if (c == '}' && state == 6) state = 7;
     1274:   56:    if (c == ')' && state == 7) state = 8;
     1274:   57:    if (c == ']' && state == 8) state = 9;
     1274:   58:    if (s[0] == 'r' && s[1] == 'e'
       20:   59:       && s[2] == 's' && s[3] == 'e'
       20:   60:       && s[4] == 't' && s[5] == '\0'
       20:   61:       && state == 9)
        -:   62:    {
        1:   63:      printf("error ");
        1:   64:      exit(200);
        -:   65:    }
     1273:   66:  }
        -:   67:}
        -:   68:
        -:   69:
        1:   70:int main(int argc, char *argv[])
        -:   71:{
        1:   72:    srand(time(NULL));
        1:   73:    testme();
    #####:   74:    return 0;
        -:   75:}
